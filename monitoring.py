#!/usr/bin/python

from __future__ import print_function
from __future__ import absolute_import
import openshift as oc
from openshift import Missing
import traceback

with oc.tracking() as t:
    with oc.client_host(hostname="18.222.71.125", username="root", auto_add_host=True):  # free-stg
        with oc.project("openshift-monitoring"):
            try:

                result = oc.selector('pod/alertmanager-main-0').object().execute(['cat'],
                                                                                 container_name='alertmanager',
                                                                                 stdin='stdin for cat')
                print(result.out())
                exit(0)

                cr_rules = oc.selector("prometheusrules")
                print("CR has the following rule sets: {}".format(cr_rules.qnames()))

                if cr_rules.object().model.metadata.labels.cr_generated is Missing:
                    print("Rule was not generated by CR")

                oc.selector('pods').annotate(annotations={
                    'cr_annotation_test': None,
                })

                oc.selector('node/pod_ip-172-31-79-85.us-east-2.compute.internal').object().patch({
                    'metadata': {
                        'annotations': {
                            'cr_patch': 'yes'
                        }
                    }
                }, strategy="strategic", cmd_args=['-o=yaml'])

                # cr_rules.object().label({
                #    'cr_test': 'yes',
                # })

                print("Result:\n{}".format(t.get_result()))
            except Exception:
                traceback.print_exc()
